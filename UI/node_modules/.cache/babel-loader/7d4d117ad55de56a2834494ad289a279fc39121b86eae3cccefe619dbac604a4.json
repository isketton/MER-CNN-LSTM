{"ast":null,"code":"var _jsxFileName = \"/Users/isiahketton/Desktop/CS 152 Proj/UI/react-ui/src/pages/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport \"./Playlist.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const [playlists, setPlaylists] = useState([]); // State to store playlists\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedEmotion, setSelectedEmotion] = useState(\"\");\n  const [data, setData] = useState([]);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleSelectChange = e => {\n    setSelectedEmotion(e.target.value);\n  };\n  const handleAddPlaylist = async playlistName => {\n    // Logic to add a new playlist\\\n\n    const response = await axios.get(\"http://127.0.0.1:5000/api/home\", {});\n    console.log(response.data);\n    const songs = response.data.map((song, index) => ({\n      arousal: song.arousal,\n      valence: song.valence,\n      artist: song.artist,\n      title: song.title,\n      song_id: song.song_id\n    }));\n\n    // Update the data state with the extracted songs\n    setData(songs);\n    console.log(songs);\n    const filteredSongs = songs.filter(song => {\n      if (selectedEmotion === \"happy\") {\n        // Filter songs with high valence and high arousal (happy)\n        return song.valence > 0.5 && song.arousal > 0.5;\n      } else if (selectedEmotion === \"sad\") {\n        // Filter songs with low valence and low arousal (sad)\n        return song.valence <= 0.5 && song.arousal <= 0.5;\n      } else if (selectedEmotion === \"angry\") {\n        // Filter songs with high valence and low arousal (angry)\n        return song.valence > 0.5 && song.arousal <= 0.5;\n      } else if (selectedEmotion === \"relaxed\") {\n        // Filter songs with low valence and high arousal (relaxed)\n        return song.valence <= 0.5 && song.arousal > 0.5;\n      }\n      return false;\n    });\n    console.log(filteredSongs);\n    await axios.post(\"http://127.0.0.1:5000/api/playlists\", filteredSongs);\n    setPlaylists([...playlists, {\n      name: playlistName,\n      filteredSongs\n    }]);\n    closeModal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlists\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"plus-button\",\n      onClick: openModal,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: playlists.map((playlist, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/playlist/${playlist.name}`,\n        className: \"grid-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: playlist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [playlist.filteredSongs.length, \" songs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Playlist Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select-field\",\n          value: selectedEmotion,\n          onChange: handleSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an emotion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"happy\",\n            children: \"Happy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sad\",\n            children: \"Sad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"angry\",\n            children: \"Angry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"relaxed\",\n            children: \"Relaxed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddPlaylist(\"New Playlist\"),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist, \"7Cq3A9D8qqrRgvJnYmFJBD+NE/k=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","Modal","jsxDEV","_jsxDEV","Playlist","_s","playlists","setPlaylists","isModalOpen","setIsModalOpen","selectedEmotion","setSelectedEmotion","data","setData","openModal","closeModal","handleSelectChange","e","target","value","handleAddPlaylist","playlistName","response","get","console","log","songs","map","song","index","arousal","valence","artist","title","song_id","filteredSongs","filter","post","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","playlist","to","length","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/isiahketton/Desktop/CS 152 Proj/UI/react-ui/src/pages/Playlist.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport \"./Playlist.css\";\n\nconst Playlist = () => {\n  const [playlists, setPlaylists] = useState([]); // State to store playlists\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedEmotion, setSelectedEmotion] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleSelectChange = (e) => {\n    setSelectedEmotion(e.target.value);\n  };\n\n  const handleAddPlaylist = async (playlistName) => {\n    // Logic to add a new playlist\\\n\n    const response = await axios.get(\"http://127.0.0.1:5000/api/home\", {});\n    console.log(response.data);\n    const songs = response.data.map((song, index) => ({\n      arousal: song.arousal,\n      valence: song.valence,\n      artist: song.artist,\n      title: song.title,\n      song_id: song.song_id,\n    }));\n\n    // Update the data state with the extracted songs\n    setData(songs);\n    console.log(songs);\n    const filteredSongs = songs.filter((song) => {\n      if (selectedEmotion === \"happy\") {\n        // Filter songs with high valence and high arousal (happy)\n        return song.valence > 0.5 && song.arousal > 0.5;\n      } else if (selectedEmotion === \"sad\") {\n        // Filter songs with low valence and low arousal (sad)\n        return song.valence <= 0.5 && song.arousal <= 0.5;\n      } else if (selectedEmotion === \"angry\") {\n        // Filter songs with high valence and low arousal (angry)\n        return song.valence > 0.5 && song.arousal <= 0.5;\n      } else if (selectedEmotion === \"relaxed\") {\n        // Filter songs with low valence and high arousal (relaxed)\n        return song.valence <= 0.5 && song.arousal > 0.5;\n      }\n      return false;\n    });\n    console.log(filteredSongs);\n    await axios.post(\"http://127.0.0.1:5000/api/playlists\", filteredSongs);\n    setPlaylists([...playlists, { name: playlistName, filteredSongs }]);\n    closeModal();\n  };\n\n  return (\n    <div className=\"playlists\">\n      <h1>Playlists</h1>\n      <button className=\"plus-button\" onClick={openModal}>\n        +\n      </button>\n      <div className=\"grid-container\">\n        {/* Render playlists */}\n        {playlists.map((playlist, index) => (\n          <Link\n            to={`/playlist/${playlist.name}`}\n            key={index}\n            className=\"grid-item\"\n          >\n            <h2>{playlist.name}</h2>\n            <p>{playlist.filteredSongs.length} songs</p>\n          </Link>\n        ))}\n      </div>\n      {/* Modal for adding new playlist */}\n      {isModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h2>Add New Playlist</h2>\n            <input type=\"text\" placeholder=\"Playlist Name\" />\n            <select\n              className=\"select-field\"\n              value={selectedEmotion}\n              onChange={handleSelectChange}\n            >\n              <option value=\"\">Select an emotion</option>\n              <option value=\"happy\">Happy</option>\n              <option value=\"sad\">Sad</option>\n              <option value=\"angry\">Angry</option>\n              <option value=\"relaxed\">Relaxed</option>\n            </select>\n            <button onClick={closeModal}>Cancel</button>\n            <button onClick={() => handleAddPlaylist(\"New Playlist\")}>\n              Add\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Playlist;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}