{"ast":null,"code":"var _jsxFileName = \"/Users/isiahketton/Desktop/CS 152 Proj/UI/react-ui/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedGridItem, setSelectedGridItem] = useState(null);\n  const [isActive, setIsActive] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\"); // State for search query\n  const [detailedData, setDetailedData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/api/home\", {});\n        setData(response.data);\n        setFilteredData(response.data); // Initialize filteredData with all data\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Apply filtering logic when search query changes\n    filterData();\n  }, [searchQuery]);\n  const filterData = () => {\n    // Filter data based on search query\n    const filtered = data.filter(item => {\n      const titleMatch = item.title.toLowerCase().includes(searchQuery.toLowerCase());\n      const artistMatch = item.artist.toLowerCase().includes(searchQuery.toLowerCase());\n      const emotionMatch = mapEmotion(item.arousal, item.valence).toLowerCase().includes(searchQuery.toLowerCase());\n      return titleMatch || artistMatch || emotionMatch;\n    });\n    setFilteredData(filtered);\n  };\n  const handleSearchInputChange = e => {\n    setSearchQuery(e.target.value);\n  };\n  const handleGridItemClicked = async item => {\n    setSelectedGridItem(item); // Update selected item state\n    const response = await axios.get(`http://127.0.0.1:5000/api/recommend/${item.song_id}`);\n    setDetailedData(response.data);\n    setIsActive(true);\n  };\n  const closeModal = () => {\n    setSelectedGridItem(null); // Clear selected item state to close modal\n    setIsActive(false);\n  };\n  const mapEmotion = (arousal, valence) => {\n    if (arousal > 0.5 && valence > 0.5) {\n      return \"Happy\";\n    } else if (arousal > 0.5 && valence <= 0.5) {\n      return \"Angry\";\n    } else if (arousal <= 0.5 && valence > 0.5) {\n      return \"Relaxed\";\n    } else {\n      return \"Sad/Dark Vibes\";\n    }\n  };\n  const getColorForEmotion = emotion => {\n    switch (emotion) {\n      case \"Happy\":\n        return \"orange\";\n      // Change color for Happy emotion\n      case \"Angry\":\n        return \"red\";\n      // Change color for Angry emotion\n      case \"Relaxed\":\n        return \"green\";\n      // Change color for Relaxed emotion\n      case \"Sad\":\n        return \"blue\";\n      // Change color for Sad emotion\n      default:\n        return \"black\";\n      // Default color\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"\",\n      type: \"text\",\n      placeholder: \"Search by title, artist, or emotion...\",\n      value: searchQuery,\n      onChange: handleSearchInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        onClick: () => handleGridItemClicked(item),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"emotion-bubble\",\n          style: {\n            backgroundColor: getColorForEmotion(mapEmotion(item.arousal, item.valence))\n          },\n          children: mapEmotion(item.arousal, item.valence)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), selectedGridItem && detailedData && /*#__PURE__*/_jsxDEV(Modal, {\n      item: selectedGridItem,\n      detailedData: detailedData,\n      onClose: closeModal,\n      isActive: isActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"sH07/gI/w8KvaVtLR0M3UJ1OgIk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","Modal","jsxDEV","_jsxDEV","Home","_s","data","setData","filteredData","setFilteredData","loading","setLoading","error","setError","selectedGridItem","setSelectedGridItem","isActive","setIsActive","searchQuery","setSearchQuery","detailedData","setDetailedData","fetchData","response","get","filterData","filtered","filter","item","titleMatch","title","toLowerCase","includes","artistMatch","artist","emotionMatch","mapEmotion","arousal","valence","handleSearchInputChange","e","target","value","handleGridItemClicked","song_id","closeModal","getColorForEmotion","emotion","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","type","placeholder","onChange","map","index","onClick","style","backgroundColor","onClose","_c","$RefreshReg$"],"sources":["/Users/isiahketton/Desktop/CS 152 Proj/UI/react-ui/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\n\nconst Home = () => {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedGridItem, setSelectedGridItem] = useState(null);\n  const [isActive, setIsActive] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\"); // State for search query\n  const [detailedData, setDetailedData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/api/home\", {});\n        setData(response.data);\n        setFilteredData(response.data); // Initialize filteredData with all data\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    // Apply filtering logic when search query changes\n    filterData();\n  }, [searchQuery]);\n\n  const filterData = () => {\n    // Filter data based on search query\n    const filtered = data.filter((item) => {\n      const titleMatch = item.title.toLowerCase().includes(searchQuery.toLowerCase());\n      const artistMatch = item.artist.toLowerCase().includes(searchQuery.toLowerCase());\n      const emotionMatch = mapEmotion(item.arousal, item.valence).toLowerCase().includes(searchQuery.toLowerCase());\n      return titleMatch || artistMatch || emotionMatch;\n    });\n    setFilteredData(filtered);\n  };\n\n  const handleSearchInputChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleGridItemClicked = async (item) => {\n    setSelectedGridItem(item); // Update selected item state\n    const response = await axios.get(\n      `http://127.0.0.1:5000/api/recommend/${item.song_id}`\n    );\n    setDetailedData(response.data);\n    setIsActive(true);\n  };\n\n  const closeModal = () => {\n    setSelectedGridItem(null); // Clear selected item state to close modal\n    setIsActive(false);\n  };\n\n  const mapEmotion = (arousal, valence) => {\n    if (arousal > 0.5 && valence > 0.5) {\n      return \"Happy\";\n    } else if (arousal > 0.5 && valence <= 0.5) {\n      return \"Angry\";\n    } else if (arousal <= 0.5 && valence > 0.5) {\n      return \"Relaxed\";\n    } else {\n      return \"Sad/Dark Vibes\";\n    }\n  };\n\n  const getColorForEmotion = (emotion) => {\n    switch (emotion) {\n      case \"Happy\":\n        return \"orange\"; // Change color for Happy emotion\n      case \"Angry\":\n        return \"red\"; // Change color for Angry emotion\n      case \"Relaxed\":\n        return \"green\"; // Change color for Relaxed emotion\n      case \"Sad\":\n        return \"blue\"; // Change color for Sad emotion\n      default:\n        return \"black\"; // Default color\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n  return (\n    <div className=\"home-container\">\n      {/* Search Input */}\n      <input\n        className=\"\"\n        type=\"text\"\n        placeholder=\"Search by title, artist, or emotion...\"\n        value={searchQuery}\n        onChange={handleSearchInputChange}\n      />\n\n      <div className=\"grid-container\">\n        {/* Render filtered data instead of all data */}\n        {filteredData.map((item, index) => (\n          <div\n            key={index}\n            className=\"grid-item\"\n            onClick={() => handleGridItemClicked(item)}\n          >\n            <p>{item.title}</p>\n            <p>{item.artist}</p>\n            <p\n              className=\"emotion-bubble\"\n              style={{\n                backgroundColor: getColorForEmotion(\n                  mapEmotion(item.arousal, item.valence)\n                ),\n              }}\n            >\n              {mapEmotion(item.arousal, item.valence)}\n            </p>\n          </div>\n        ))}\n      </div>\n      {selectedGridItem && detailedData && (\n        <Modal\n          item={selectedGridItem}\n          detailedData={detailedData}\n          onClose={closeModal}\n          isActive={isActive}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}