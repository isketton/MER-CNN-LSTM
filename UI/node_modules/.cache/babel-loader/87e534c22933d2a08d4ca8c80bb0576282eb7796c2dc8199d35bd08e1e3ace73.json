{"ast":null,"code":"var _jsxFileName = \"/Users/isiahketton/Desktop/CS 152 Proj/UI/react-ui/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [detailedData, setDetailedData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedGridItem, setSelectedGridItem] = useState(null);\n  const [isActive, setIsActive] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/api/home\", {});\n        setData(response.data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Apply filtering logic when search query changes\n    filterData();\n  }, [searchQuery]);\n  const filterData = () => {\n    // Filter data based on search query\n    const filtered = data.filter(item => {\n      const titleMatch = item.title.toLowerCase().includes(searchQuery.toLowerCase());\n      const artistMatch = item.artist.toLowerCase().includes(searchQuery.toLowerCase());\n      const emotionMatch = mapEmotion(item.arousal, item.valence).toLowerCase().includes(searchQuery.toLowerCase());\n      return titleMatch || artistMatch || emotionMatch;\n    });\n    setFilteredData(filtered);\n  };\n  const handleGridItemClicked = async item => {\n    setSelectedGridItem(item); // Update selected item state\n    const response = await axios.get(`http://127.0.0.1:5000/api/recommend/${item.song_id}`);\n    setDetailedData(response.data);\n    setIsActive(true);\n  };\n  const closeModal = () => {\n    setSelectedGridItem(null); // Clear selected item state to close modal\n    setIsActive(false);\n  };\n  const mapEmotion = (arousal, valence) => {\n    if (arousal > 0.5 && valence > 0.5) {\n      return \"Happy\";\n    } else if (arousal > 0.5 && valence <= 0.5) {\n      return \"Angry\";\n    } else if (arousal <= 0.5 && valence > 0.5) {\n      return \"Relaxed\";\n    } else {\n      return \"Sad/Dark Vibes\";\n    }\n  };\n  const getColorForEmotion = emotion => {\n    switch (emotion) {\n      case \"Happy\":\n        return \"orange\";\n      // Change color for Happy emotion\n      case \"Angry\":\n        return \"red\";\n      // Change color for Angry emotion\n      case \"Relaxed\":\n        return \"green\";\n      // Change color for Relaxed emotion\n      case \"Sad\":\n        return \"blue\";\n      // Change color for Sad emotion\n      default:\n        return \"black\";\n      // Default color\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-item\",\n        onClick: () => handleGridItemClicked(item),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"emotion-bubble\",\n          style: {\n            backgroundColor: getColorForEmotion(mapEmotion(item.arousal, item.valence))\n          },\n          children: mapEmotion(item.arousal, item.valence)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), selectedGridItem && detailedData && /*#__PURE__*/_jsxDEV(Modal, {\n      item: selectedGridItem,\n      detailedData: detailedData,\n      onClose: closeModal,\n      isActive: isActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"qrn5vBLcu+PAwVjH/SLwAlMT7pU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","Modal","jsxDEV","_jsxDEV","Home","_s","data","setData","detailedData","setDetailedData","loading","setLoading","error","setError","selectedGridItem","setSelectedGridItem","isActive","setIsActive","searchQuery","setSearchQuery","fetchData","response","get","filterData","filtered","filter","item","titleMatch","title","toLowerCase","includes","artistMatch","artist","emotionMatch","mapEmotion","arousal","valence","setFilteredData","handleGridItemClicked","song_id","closeModal","getColorForEmotion","emotion","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","map","index","onClick","style","backgroundColor","onClose","_c","$RefreshReg$"],"sources":["/Users/isiahketton/Desktop/CS 152 Proj/UI/react-ui/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Home.css\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\n\nconst Home = () => {\n  const [data, setData] = useState([]);\n  const [detailedData, setDetailedData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedGridItem, setSelectedGridItem] = useState(null);\n  const [isActive, setIsActive] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/api/home\", {});\n        setData(response.data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    // Apply filtering logic when search query changes\n    filterData();\n  }, [searchQuery]);\n\n  const filterData = () => {\n    // Filter data based on search query\n    const filtered = data.filter((item) => {\n      const titleMatch = item.title.toLowerCase().includes(searchQuery.toLowerCase());\n      const artistMatch = item.artist.toLowerCase().includes(searchQuery.toLowerCase());\n      const emotionMatch = mapEmotion(item.arousal, item.valence).toLowerCase().includes(searchQuery.toLowerCase());\n      return titleMatch || artistMatch || emotionMatch;\n    });\n    setFilteredData(filtered);\n  };\n\n  const handleGridItemClicked = async (item) => {\n    setSelectedGridItem(item); // Update selected item state\n    const response = await axios.get(\n      `http://127.0.0.1:5000/api/recommend/${item.song_id}`\n    );\n    setDetailedData(response.data);\n    setIsActive(true);\n  };\n\n  const closeModal = () => {\n    setSelectedGridItem(null); // Clear selected item state to close modal\n    setIsActive(false);\n  };\n\n  const mapEmotion = (arousal, valence) => {\n    if (arousal > 0.5 && valence > 0.5) {\n      return \"Happy\";\n    } else if (arousal > 0.5 && valence <= 0.5) {\n      return \"Angry\";\n    } else if (arousal <= 0.5 && valence > 0.5) {\n      return \"Relaxed\";\n    } else {\n      return \"Sad/Dark Vibes\";\n    }\n  };\n\n  const getColorForEmotion = (emotion) => {\n    switch (emotion) {\n      case \"Happy\":\n        return \"orange\"; // Change color for Happy emotion\n      case \"Angry\":\n        return \"red\"; // Change color for Angry emotion\n      case \"Relaxed\":\n        return \"green\"; // Change color for Relaxed emotion\n      case \"Sad\":\n        return \"blue\"; // Change color for Sad emotion\n      default:\n        return \"black\"; // Default color\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n  return (\n    <div className=\"home-container\">\n      <div className=\"grid-container\">\n        {data.map((item, index) => (\n          <div\n            key={index}\n            className=\"grid-item\"\n            onClick={() => handleGridItemClicked(item)}\n          >\n            <p>{item.title}</p>\n            <p>{item.artist}</p>\n            <p\n              className=\"emotion-bubble\"\n              style={{\n                backgroundColor: getColorForEmotion(\n                  mapEmotion(item.arousal, item.valence)\n                ),\n              }}\n            >\n              {mapEmotion(item.arousal, item.valence)}\n            </p>\n          </div>\n        ))}\n      </div>\n      {selectedGridItem && detailedData && (\n        <Modal\n          item={selectedGridItem}\n          detailedData={detailedData}\n          onClose={closeModal}\n          isActive={isActive}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}